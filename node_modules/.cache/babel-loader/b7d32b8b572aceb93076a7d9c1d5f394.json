{"ast":null,"code":"var _jsxFileName = \"/home/lenovo/Downloads/redux-data-handler-example-1/src/App.js\";\nimport React from \"react\";\nimport { connect } from \"react-redux\";\nimport { getUsers, getUsersSuccess } from \"./actions\";\nimport \"./styles.css\";\n\nclass App extends React.Component {\n  constructor(...args) {\n    super(...args);\n\n    this.handleLoadUsersClick = () => {\n      this.props.onLoadUsersClick(); // let's do our api call\n\n      fetch(\"https://api.spacexdata.com/v3/history\").then(response => response.json()).then(json => this.props.onLoadUsersComplete(json));\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"App\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"h1\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 9\n      }\n    }, \"React, Redux, and Data Handling\"), /*#__PURE__*/React.createElement(\"h2\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 9\n      }\n    }, \"An example \"), /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 9\n      }\n    }, \"Click the load users button below to start loading users from the api\"), /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"button\", {\n      onClick: this.handleLoadUsersClick,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 11\n      }\n    }, \"Load users\")), /*#__PURE__*/React.createElement(\"hr\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(\"h3\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 9\n      }\n    }, \"Users\"), this.props.loading ? /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 31\n      }\n    }, \"loading...\") : null, !this.props.loading && this.props.users ? /*#__PURE__*/React.createElement(\"ul\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 11\n      }\n    }, this.props.users.map(user => /*#__PURE__*/React.createElement(\"li\", {\n      key: user.id,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"strong\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 17\n      }\n    }, user.title), \" | \", user.email))) : null);\n  }\n\n}\n\nvar mapStateToProps = state => ({\n  users: state.users,\n  loading: state.isLoading\n});\n\nvar mapDispatchToProps = dispatch => {\n  return {\n    onLoadUsersClick: () => {\n      dispatch(getUsers());\n    },\n    onLoadUsersComplete: users => {\n      dispatch(getUsersSuccess(users));\n    }\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(App);","map":{"version":3,"sources":["/home/lenovo/Downloads/redux-data-handler-example-1/src/App.js"],"names":["React","connect","getUsers","getUsersSuccess","App","Component","handleLoadUsersClick","props","onLoadUsersClick","fetch","then","response","json","onLoadUsersComplete","render","loading","users","map","user","id","title","email","mapStateToProps","state","isLoading","mapDispatchToProps","dispatch"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,QAAT,EAAmBC,eAAnB,QAA0C,WAA1C;AAEA,OAAO,cAAP;;AAEA,MAAMC,GAAN,SAAkBJ,KAAK,CAACK,SAAxB,CAAkC;AAAA;AAAA;;AAAA,SAChCC,oBADgC,GACT,MAAM;AAC3B,WAAKC,KAAL,CAAWC,gBAAX,GAD2B,CAG3B;;AACAC,MAAAA,KAAK,CAAC,uCAAD,CAAL,CACGC,IADH,CACQC,QAAQ,IAAIA,QAAQ,CAACC,IAAT,EADpB,EAEGF,IAFH,CAEQE,IAAI,IAAI,KAAKL,KAAL,CAAWM,mBAAX,CAA+BD,IAA/B,CAFhB;AAGD,KAR+B;AAAA;;AAUhCE,EAAAA,MAAM,GAAG;AACP,wBACE;AAAK,MAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yCADF,eAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBAFF,eAGE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,+EAHF,eAME;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAQ,MAAA,OAAO,EAAE,KAAKR,oBAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADF,CANF,eASE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MATF,eAUE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAVF,EAWG,KAAKC,KAAL,CAAWQ,OAAX,gBAAqB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAArB,GAAyC,IAX5C,EAYG,CAAC,KAAKR,KAAL,CAAWQ,OAAZ,IAAuB,KAAKR,KAAL,CAAWS,KAAlC,gBACC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACG,KAAKT,KAAL,CAAWS,KAAX,CAAiBC,GAAjB,CAAqBC,IAAI,iBACxB;AAAI,MAAA,GAAG,EAAEA,IAAI,CAACC,EAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAASD,IAAI,CAACE,KAAd,CADF,SACmCF,IAAI,CAACG,KADxC,CADD,CADH,CADD,GAQG,IApBN,CADF;AAwBD;;AAnC+B;;AAsClC,IAAMC,eAAe,GAAGC,KAAK,KAAK;AAChCP,EAAAA,KAAK,EAAEO,KAAK,CAACP,KADmB;AAEhCD,EAAAA,OAAO,EAAEQ,KAAK,CAACC;AAFiB,CAAL,CAA7B;;AAKA,IAAMC,kBAAkB,GAAGC,QAAQ,IAAI;AACrC,SAAO;AACLlB,IAAAA,gBAAgB,EAAE,MAAM;AACtBkB,MAAAA,QAAQ,CAACxB,QAAQ,EAAT,CAAR;AACD,KAHI;AAILW,IAAAA,mBAAmB,EAAEG,KAAK,IAAI;AAC5BU,MAAAA,QAAQ,CAACvB,eAAe,CAACa,KAAD,CAAhB,CAAR;AACD;AANI,GAAP;AAQD,CATD;;AAWA,eAAef,OAAO,CACpBqB,eADoB,EAEpBG,kBAFoB,CAAP,CAGbrB,GAHa,CAAf","sourcesContent":["import React from \"react\";\n\nimport { connect } from \"react-redux\";\nimport { getUsers, getUsersSuccess } from \"./actions\";\n\nimport \"./styles.css\";\n\nclass App extends React.Component {\n  handleLoadUsersClick = () => {\n    this.props.onLoadUsersClick();\n\n    // let's do our api call\n    fetch(\"https://api.spacexdata.com/v3/history\")\n      .then(response => response.json())\n      .then(json => this.props.onLoadUsersComplete(json));\n  };\n\n  render() {\n    return (\n      <div className=\"App\">\n        <h1>React, Redux, and Data Handling</h1>\n        <h2>An example </h2>\n        <p>\n          Click the load users button below to start loading users from the api\n        </p>\n        <p>\n          <button onClick={this.handleLoadUsersClick}>Load users</button>\n        </p>\n        <hr />\n        <h3>Users</h3>\n        {this.props.loading ? <p>loading...</p> : null}\n        {!this.props.loading && this.props.users ? (\n          <ul>\n            {this.props.users.map(user => (\n              <li key={user.id}>\n                <strong>{user.title}</strong> | {user.email}\n              </li>\n            ))}\n          </ul>\n        ) : null}\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = state => ({\n  users: state.users,\n  loading: state.isLoading\n});\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    onLoadUsersClick: () => {\n      dispatch(getUsers());\n    },\n    onLoadUsersComplete: users => {\n      dispatch(getUsersSuccess(users));\n    }\n  };\n};\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(App);\n"]},"metadata":{},"sourceType":"module"}